{
  "openapi": "3.0.3",
  "info": {
    "title": "Shopping Application API - Combined Items",
    "description": "API for managing shopping items with automatic combining of duplicate names",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "summary": "Get all shopping items",
        "description": "Retrieves a list of all shopping items",
        "operationId": "getItems",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create or update a shopping item",
        "description": "Adds a new item to the shopping list or increases quantity if the item name already exists",
        "operationId": "createOrUpdateItem",
        "requestBody": {
          "description": "Item object to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Bananas"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 5
                  }
                },
                "required": ["name", "quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "201": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/items/{itemId}": {
      "parameters": [
        {
          "name": "itemId",
          "in": "path",
          "description": "ID of the item",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Get item by ID",
        "description": "Retrieves a specific shopping item by its ID",
        "operationId": "getItemById",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "404": {
            "description": "Item not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an item",
        "description": "Updates an existing shopping item",
        "operationId": "updateItem",
        "requestBody": {
          "description": "Updated item object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Bananas"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 5
                  }
                },
                "required": ["name", "quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an item",
        "description": "Removes a shopping item from the list",
        "operationId": "deleteItem",
        "responses": {
          "204": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Bananas"
          },
          "quantity": {
            "type": "integer",
            "example": 5
          }
        },
        "required": ["id", "name", "quantity"]
      }
    }
  }
}
